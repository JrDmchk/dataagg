/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { UserConfigCreateNestedManyWithoutUserModelsInput } from "./UserConfigCreateNestedManyWithoutUserModelsInput";
import { Type } from "class-transformer";
import { UsersWorkspaceCreateNestedManyWithoutUserModelsInput } from "./UsersWorkspaceCreateNestedManyWithoutUserModelsInput";
import { UserVerificationCodeCreateNestedManyWithoutUserModelsInput } from "./UserVerificationCodeCreateNestedManyWithoutUserModelsInput";

@InputType()
class UserModelCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  password!: string;

  @ApiProperty({
    required: true,
  })
  @IsJSONValue()
  @Field(() => GraphQLJSON)
  roles!: InputJsonValue;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  status?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => UserConfigCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => UserConfigCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => UserConfigCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  userConfigs?: UserConfigCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  username!: string;

  @ApiProperty({
    required: false,
    type: () => UsersWorkspaceCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => UsersWorkspaceCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => UsersWorkspaceCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  usersWorkspaces?: UsersWorkspaceCreateNestedManyWithoutUserModelsInput;

  @ApiProperty({
    required: false,
    type: () => UserVerificationCodeCreateNestedManyWithoutUserModelsInput,
  })
  @ValidateNested()
  @Type(() => UserVerificationCodeCreateNestedManyWithoutUserModelsInput)
  @IsOptional()
  @Field(() => UserVerificationCodeCreateNestedManyWithoutUserModelsInput, {
    nullable: true,
  })
  userVerificationCodes?: UserVerificationCodeCreateNestedManyWithoutUserModelsInput;
}

export { UserModelCreateInput as UserModelCreateInput };
